// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Design implementation internals
// See Vpicorv32.h for the primary calling header

#include "Vpicorv32__pch.h"
#include "Vpicorv32_picorv32__pi1.h"

VL_ATTR_COLD void Vpicorv32_picorv32__pi1___ctor_var_reset(Vpicorv32_picorv32__pi1* vlSelf) {
    if (false && vlSelf) {}  // Prevent unused
    Vpicorv32__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+        Vpicorv32_picorv32__pi1___ctor_var_reset\n"); );
    // Body
    vlSelf->clk = VL_RAND_RESET_I(1);
    vlSelf->resetn = VL_RAND_RESET_I(1);
    vlSelf->trap = VL_RAND_RESET_I(1);
    vlSelf->mem_valid = VL_RAND_RESET_I(1);
    vlSelf->mem_instr = VL_RAND_RESET_I(1);
    vlSelf->mem_ready = VL_RAND_RESET_I(1);
    vlSelf->mem_addr = VL_RAND_RESET_I(32);
    vlSelf->mem_wdata = VL_RAND_RESET_I(32);
    vlSelf->mem_wstrb = VL_RAND_RESET_I(4);
    vlSelf->mem_rdata = VL_RAND_RESET_I(32);
    vlSelf->__PVT__mem_la_read = VL_RAND_RESET_I(1);
    vlSelf->__PVT__mem_la_write = VL_RAND_RESET_I(1);
    vlSelf->__PVT__mem_la_addr = VL_RAND_RESET_I(32);
    vlSelf->__PVT__mem_la_wdata = VL_RAND_RESET_I(32);
    vlSelf->__PVT__mem_la_wstrb = VL_RAND_RESET_I(4);
    vlSelf->pcpi_valid = VL_RAND_RESET_I(1);
    vlSelf->pcpi_insn = VL_RAND_RESET_I(32);
    vlSelf->pcpi_rs1 = VL_RAND_RESET_I(32);
    vlSelf->pcpi_rs2 = VL_RAND_RESET_I(32);
    vlSelf->pcpi_wr = VL_RAND_RESET_I(1);
    vlSelf->pcpi_rd = VL_RAND_RESET_I(32);
    vlSelf->pcpi_wait = VL_RAND_RESET_I(1);
    vlSelf->pcpi_ready = VL_RAND_RESET_I(1);
    vlSelf->irq = VL_RAND_RESET_I(32);
    vlSelf->eoi = VL_RAND_RESET_I(32);
    vlSelf->trace_valid = VL_RAND_RESET_I(1);
    vlSelf->trace_data = VL_RAND_RESET_Q(36);
    vlSelf->__PVT__count_cycle = VL_RAND_RESET_Q(64);
    vlSelf->__PVT__count_instr = VL_RAND_RESET_Q(64);
    vlSelf->__PVT__reg_pc = VL_RAND_RESET_I(32);
    vlSelf->__PVT__reg_next_pc = VL_RAND_RESET_I(32);
    vlSelf->__PVT__reg_op1 = VL_RAND_RESET_I(32);
    vlSelf->__PVT__reg_op2 = VL_RAND_RESET_I(32);
    vlSelf->__PVT__reg_out = VL_RAND_RESET_I(32);
    vlSelf->__PVT__reg_sh = VL_RAND_RESET_I(5);
    vlSelf->__PVT__next_pc = VL_RAND_RESET_I(32);
    vlSelf->__PVT__irq_active = VL_RAND_RESET_I(1);
    vlSelf->__PVT__timer = VL_RAND_RESET_I(32);
    for (int __Vi0 = 0; __Vi0 < 32; ++__Vi0) {
        vlSelf->__PVT__cpuregs[__Vi0] = VL_RAND_RESET_I(32);
    }
    vlSelf->__PVT__mem_state = VL_RAND_RESET_I(2);
    vlSelf->__PVT__mem_wordsize = VL_RAND_RESET_I(2);
    vlSelf->__PVT__mem_rdata_word = VL_RAND_RESET_I(32);
    vlSelf->__PVT__mem_rdata_q = VL_RAND_RESET_I(32);
    vlSelf->__PVT__mem_do_prefetch = VL_RAND_RESET_I(1);
    vlSelf->__PVT__mem_do_rinst = VL_RAND_RESET_I(1);
    vlSelf->__PVT__mem_do_rdata = VL_RAND_RESET_I(1);
    vlSelf->__PVT__mem_do_wdata = VL_RAND_RESET_I(1);
    vlSelf->__PVT__mem_xfer = VL_RAND_RESET_I(1);
    vlSelf->__PVT__mem_rdata_latched = VL_RAND_RESET_I(32);
    vlSelf->__PVT__mem_done = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_lui = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_auipc = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_jal = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_jalr = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_beq = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_bne = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_blt = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_bge = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_bltu = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_bgeu = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_lb = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_lh = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_lw = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_lbu = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_lhu = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_sb = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_sh = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_sw = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_addi = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_slti = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_sltiu = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_xori = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_ori = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_andi = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_slli = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_srli = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_srai = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_add = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_sub = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_sll = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_slt = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_sltu = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_xor = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_srl = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_sra = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_or = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_and = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_rdcycle = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_rdcycleh = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_rdinstr = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_rdinstrh = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_fence = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_getq = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_setq = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_maskirq = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_waitirq = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_timer = VL_RAND_RESET_I(1);
    vlSelf->__PVT__instr_trap = VL_RAND_RESET_I(1);
    vlSelf->__PVT__decoded_rd = VL_RAND_RESET_I(5);
    vlSelf->__PVT__decoded_rs1 = VL_RAND_RESET_I(5);
    vlSelf->__PVT__decoded_rs2 = VL_RAND_RESET_I(5);
    vlSelf->__PVT__decoded_imm = VL_RAND_RESET_I(32);
    vlSelf->__PVT__decoded_imm_j = VL_RAND_RESET_I(32);
    vlSelf->__PVT__decoder_trigger = VL_RAND_RESET_I(1);
    vlSelf->__PVT__decoder_pseudo_trigger = VL_RAND_RESET_I(1);
    vlSelf->__PVT__compressed_instr = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_lui_auipc_jal = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_lb_lh_lw_lbu_lhu = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_slli_srli_srai = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_jalr_addi_slti_sltiu_xori_ori_andi = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_sb_sh_sw = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_sll_srl_sra = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_lui_auipc_jal_jalr_addi_add_sub = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_slti_blt_slt = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_sltiu_bltu_sltu = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_beq_bne_blt_bge_bltu_bgeu = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_lbu_lhu_lw = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_alu_reg_imm = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_alu_reg_reg = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_compare = VL_RAND_RESET_I(1);
    vlSelf->__PVT__is_rdcycle_rdcycleh_rdinstr_rdinstrh = VL_RAND_RESET_I(1);
    vlSelf->__PVT__cpu_state = VL_RAND_RESET_I(8);
    vlSelf->__PVT__latched_store = VL_RAND_RESET_I(1);
    vlSelf->__PVT__latched_stalu = VL_RAND_RESET_I(1);
    vlSelf->__PVT__latched_branch = VL_RAND_RESET_I(1);
    vlSelf->__PVT__latched_compr = VL_RAND_RESET_I(1);
    vlSelf->__PVT__latched_is_lu = VL_RAND_RESET_I(1);
    vlSelf->__PVT__latched_is_lh = VL_RAND_RESET_I(1);
    vlSelf->__PVT__latched_is_lb = VL_RAND_RESET_I(1);
    vlSelf->__PVT__latched_rd = VL_RAND_RESET_I(5);
    vlSelf->__PVT__current_pc = VL_RAND_RESET_I(32);
    vlSelf->__PVT__do_waitirq = VL_RAND_RESET_I(1);
    vlSelf->__PVT__alu_out = VL_RAND_RESET_I(32);
    vlSelf->__PVT__alu_out_q = VL_RAND_RESET_I(32);
    vlSelf->__PVT__alu_out_0 = VL_RAND_RESET_I(1);
    vlSelf->__PVT__cpuregs_write = VL_RAND_RESET_I(1);
    vlSelf->__PVT__cpuregs_wrdata = VL_RAND_RESET_I(32);
    vlSelf->__PVT__cpuregs_rs1 = VL_RAND_RESET_I(32);
    vlSelf->__PVT__cpuregs_rs2 = VL_RAND_RESET_I(32);
    vlSelf->__Vdly__mem_state = VL_RAND_RESET_I(2);
    vlSelf->__Vdly__mem_do_rinst = VL_RAND_RESET_I(1);
    vlSelf->__Vdly__mem_wordsize = VL_RAND_RESET_I(2);
    vlSelf->__Vdly__latched_is_lu = VL_RAND_RESET_I(1);
    vlSelf->__Vdly__latched_is_lh = VL_RAND_RESET_I(1);
    vlSelf->__Vdly__latched_is_lb = VL_RAND_RESET_I(1);
    vlSelf->__Vdly__reg_pc = VL_RAND_RESET_I(32);
    vlSelf->__Vdly__reg_next_pc = VL_RAND_RESET_I(32);
    vlSelf->__Vdly__latched_store = VL_RAND_RESET_I(1);
    vlSelf->__Vdly__latched_stalu = VL_RAND_RESET_I(1);
    vlSelf->__Vdly__latched_branch = VL_RAND_RESET_I(1);
    vlSelf->__Vdly__count_instr = VL_RAND_RESET_Q(64);
    vlSelf->__Vdly__mem_do_prefetch = VL_RAND_RESET_I(1);
    vlSelf->__Vdly__cpu_state = VL_RAND_RESET_I(8);
    vlSelf->__Vdly__reg_op1 = VL_RAND_RESET_I(32);
    vlSelf->__Vdly__timer = VL_RAND_RESET_I(32);
}
